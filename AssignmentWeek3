from random import randrange

class Pet():
    boredom_decrement = 2
    hunger_decrement = 2
    boredom_threshold = 10
    hunger_threshold = 10
    sounds = ['Mrrp']
    def __init__(self, name = "Kitty"):
        self.name = name
        self.hunger = randrange(self.hunger_threshold)
        self.boredom = randrange(self.boredom_threshold)
        self.sounds = self.sounds[:]  # copy the class attribute, so that when we make changes to it, we won't affect the other Pets in the class

    def clock_tick(self):
        self.boredom += 1
        self.hunger += 1

    def mood(self):
        if self.hunger <= self.hunger_threshold and self.boredom <= self.boredom_threshold:
            return "happy"
        elif self.hunger > self.hunger_threshold:
            return "hungry"
        else:
            return "bored"

    def __str__(self):
        state = "     I'm " + self.name + ". "
        state += " I feel " + self.mood() + ". "
        # state += "Hunger {} Boredom {} Words {}".format(self.hunger, self.boredom, self.sounds)
        return state

    def hi(self):
        print(self.sounds[randrange(len(self.sounds))])
        self.reduce_boredom()

    def teach(self, word):
        self.sounds.append(word)
        self.reduce_boredom()

    def feed(self):
        self.reduce_hunger()

    def reduce_hunger(self):
        self.hunger = max(0, self.hunger - self.hunger_decrement)

    def reduce_boredom(self):
        self.boredom = max(0, self.boredom - self.boredom_decrement)


#
# print()
p1 = Pet()
# print(p1)
names = ["charlie","sniper","hulk"]
i = True
while i:
        a = int(input(("Choose action 1. Adopt a pet 2. interact with the pets :")))
        if a == 1 :
            name = input("enter the name of the pet :")
            p1 = Pet(name)
            names.append(name)
            print(p1)
        else:
            action  = int(input("1.feed 2.teach 3.greet"))
            if action==1 :
                p1.feed()
                print(p1)
            elif action==2:
                word = input("enter the word u want to teach")
                p1.teach(word)
                print(p1)

            else:
                p1.hi()
                print(p1)
        p1.clock_tick()
        c= input("do you want to continue(y/n) ")
        if c == 'n' :
            i = False
